<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--
        Spring整合Quartz进行配置 步骤如下：
        1：定义工作任务的Job
        2：定义触发器Trigger，并将触发器与工作任务绑定
        3：定义调度器Scheduler，并将Trigger注册到Scheduler
     -->
    <!-- 1：定义任务的bean ，这里使用JobDetailFactoryBean,也可以使用MethodInvokingJobDetailFactoryBean ，配置类似-->
    <bean name="myJob1" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- 指定job的名称 -->
        <property name="name" value="my_job_1"/>
        <!-- 指定job的分组 -->
        <property name="group" value="my_group"/>
        <!-- 指定具体的job类 -->
        <property name="jobClass" value="com.ithawk.demo.quartz.spring.quartz.MyJob1"/>
        <!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中会删除该任务  -->
        <property name="durability" value="true"/>
        <!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 -->
        <!--<property name="applicationContextJobDataKey" value="applicationContext"/>-->
    </bean>

    <bean name="myJob2" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <!-- 指定job的名称 -->
        <property name="name" value="my_job_2"/>
        <!-- 指定job的分组 -->
        <property name="group" value="my_group"/>
        <!-- 指定具体的job类 -->
        <property name="jobClass" value="com.ithawk.demo.quartz.spring.quartz.MyJob2"/>
        <!-- 必须设置为true，如果为false，当没有活动的触发器与之关联时会在调度器中会删除该任务  -->
        <property name="durability" value="true"/>
        <!-- 指定spring容器的key，如果不设定在job中的jobmap中是获取不到spring容器的 -->
        <!--<property name="applicationContextJobDataKey" value="applicationContext"/>-->
    </bean>

    <!-- 2.1：定义触发器的bean，定义一个Simple的Trigger，一个触发器只能和一个任务进行绑定 -->
    <!-- 一个Job可以绑定多个Trigger -->
    <bean name="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <!--指定Trigger的名称-->
        <property name="name" value="my_trigger_1"/>
        <!--指定Trigger的组别-->
        <property name="group" value="my_group"/>
        <!--指定Tirgger绑定的Job-->
        <property name="jobDetail" ref="myJob1"/>
        <!--指定Trigger的延迟时间 1s后运行-->
        <property name="startDelay" value="1000"/>
        <!--指定Trigger的重复间隔  5s-->
        <property name="repeatInterval" value="5000"/>
        <!--指定Trigger的重复次数-->
        <property name="repeatCount" value="2"/>
    </bean>

    <!-- 2.2：定义触发器的bean，定义一个Cron的Trigger，一个触发器只能和一个任务进行绑定 -->
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!-- 指定Trigger的名称 -->
        <property name="name" value="my_trigger_2"/>
        <!-- 指定Trigger的名称 -->
        <property name="group" value="my_group"/>
        <!-- 指定Tirgger绑定的Job -->
        <property name="jobDetail" ref="myJob2"/>
        <!-- 指定Cron 的表达式 ，当前是每隔1s运行一次 -->
        <property name="cronExpression" value="0/1 * * * * ?"/>
    </bean>

    <!-- 3.1 定义调度器，并将Trigger注册到调度器中。这种方式，任务只会存储到RAM。-->
    <bean name="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>

    <!--  3.2 持久化数据配置，需要添加quartz.properties。这种方式，任务会持久化到数据库。 -->
<!--    <bean name="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
    <property name="configLocation" value="classpath:quartz.properties"/>
        <property name="triggers">
            <list>
                <ref bean="simpleTrigger"/>
                <ref bean="cronTrigger"/>
            </list>
        </property>
    </bean>-->

</beans>