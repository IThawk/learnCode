#spring:
#  datasource:
#    url: jdbc:h2:mem:job_event_storage
#    driver-class-name: org.h2.Driver
#    username: sa
#    password:
management:
  server:
    servlet:
      context-path: /actuator
  health:
    mail:
      enabled: false
spring:
  datasource:
    jdbc-url: jdbc:h2:file:C:/code/codeMake     #url: jdbc:h2:mem:dayup 这是内存类型的
    username: sa
    password:
    driver-class-name: org.h2.Driver
    type: com.zaxxer.hikari.HikariDataSource
    initialization-mode: always
    continue-on-error: true
    schema:
      - "classpath:db/h2_tables_xxl_job.sql"
      - "classpath:db-h2/schema.sql"
    data:
      - "classpath:db-h2/data.sql"     #      - "classpath:db/h2/sys_job_data.sql"     #进行该配置后，每次启动程序，程序都会运行resources/db/data.sql文件，对数据库的数据操作。

    hikari:
      minimum-idle: 5
      #      connection-test-query: SELECT 1 FROM orm_user
      maximum-pool-size: 20
      auto-commit: true
      idle-timeout: 30000
      pool-name: SpringBootDemoHikariCP
      max-lifetime: 60000
      connection-timeout: 30000
    platform: h2
  h2:   # 进行该配置后，h2 web consloe就可以在远程访问了。否则只能在本机访问。
    console:
      settings:
        web-allow-others: true
      path: /h2       #进行该配置，你就可以通过YOUR_URL/h2访问h2 web consloe。YOUR_URL是你程序的访问URl。
      enabled: true        #进行该配置，程序开启时就会启动h2 web consloe。当然这是默认的，如果你不想在启动程序时启动h2 web consloe，那么就设置为false。

  mvc:
    servlet.load-on-startup: 0
    static-path-pattern: /xxl-job-static/**
  resources:
    static-locations: classpath:/xxl-job-static/
  freemarker:
    templateLoaderPath: classpath:/xxl-job-templates/,classpath:/template/
    suffix: .ftl
    charset: UTF-8
    request-context-attribute: request
    settings:
      number_format: 0.##########
  mail:
    host: smtp.qq.com
    port: 25
    username: xxx@qq.com
    password: xxx
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
        socketFactory:
          class: javax.net.ssl.SSLSocketFactory

logging:
  level:
    com.xkcoding: debug
    com.xkcoding.orm.mybatis.plus.mapper: trace
mybatis-plus:
  mapper-locations: classpath:mappers/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.xkcoding.orm.mybatis.plus.entity
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: auto
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      table-underline: true
      #是否开启大写命名，默认不开启
      #capital-mode: true
      #逻辑删除配置
      #logic-delete-value: 1
      #logic-not-delete-value: 0
      db-type: mysql
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
xxl:
  job:
    datasource:
      jdbc-url: jdbc:h2:file:C:/code/codeMake
      username: sa
      password:
      driverClassName: org.h2.Driver
    i18n: zh_CN
    triggerpool:
      fast:
        max: 200
      slow:
        max: 100
    logretentiondays: 30
    ###web端启动调度器
    admin:
      flag: true
      addresses: http://127.0.0.1:9090/xxl-job-admin
    ### xxl-job executor appname
    executor:
      appname:  xxl-job-executor-test
      address:
      ip:
      port: 9999
      logpath:  C:/dev_logs/xxl-job/jobhandler
      logretentiondays:  30
    accessToken:
    jobWebUrl: http://localhost:9090/xxl-job-admin
    jobGroup: 1
    scanPackage: com.xkcoding.orm.mybatis.plus.task
    baseUrl: http://localhost:9090/  # 服务定时任务请求基础url
    executorIp: 127.0.0.1
server:
  port: 9090