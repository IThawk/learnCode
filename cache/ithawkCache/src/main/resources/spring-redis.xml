<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
                     http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context-4.0.xsd ">

	<bean id="annotationPropertyConfigurerRedis"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<!-- redis数据源 -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大空连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 返回连接时，检测连接是否成功 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <!-- Spring-redis连接池管理工厂 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <!-- IP地址 -->
        <property name="hostName" value="${redis.host}" />
        <!-- 端口号 -->
        <property name="port" value="${redis.port}" />
<!--		<property name="password" value="${redis.password}" />-->
        <!-- 超时时间 默认2000-->
        <property name="timeout" value="${redis.timeout}" />
        <!-- 连接池配置引用 -->
        <property name="poolConfig" ref="poolConfig" />
        <!-- usePool：是否使用连接池 -->
        <property name="usePool" value="true"/>
    </bean>

    <!-- redis template definition -->
<!--    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
<!--        <property name="connectionFactory" ref="jedisConnectionFactory" />-->
<!--&lt;!&ndash;        <property name="keySerializer">&ndash;&gt;-->
<!--&lt;!&ndash;            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />&ndash;&gt;-->
<!--&lt;!&ndash;        </property>&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="valueSerializer">&ndash;&gt;-->
<!--&lt;!&ndash;            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />&ndash;&gt;-->
<!--&lt;!&ndash;        </property>&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="hashKeySerializer">&ndash;&gt;-->
<!--&lt;!&ndash;            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />&ndash;&gt;-->
<!--&lt;!&ndash;        </property>&ndash;&gt;-->
<!--&lt;!&ndash;        <property name="hashValueSerializer">&ndash;&gt;-->
<!--&lt;!&ndash;            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />&ndash;&gt;-->
<!--&lt;!&ndash;        </property>&ndash;&gt;-->
<!--         &lt;!&ndash;开启事务  &ndash;&gt;-->
<!--        <property name="enableTransactionSupport" value="true"></property>-->
<!--    </bean>-->

<!--	&lt;!&ndash;自定义redis工具类,在需要缓存的地方注入此类  &ndash;&gt;-->
<!--    <bean id="redisService" class="com.cff.springwork.redis.service.RedisService">-->
<!--        <property name="redisTemplate" ref="redisTemplate" />-->
<!--    </bean>-->
</beans>