server:
  port: 18997
# 视图的前辍与后辍
spring:
  mvc:
    view:
      prefix: /
      suffix: .jsp
  # 注册数据源
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.56.101:3306/test?useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    # 执行初始化脚本
    initialization-mode: always
    continue-on-error: true
    schema:
      - "classpath:db/employee.sql"
    data:
      - "classpath:db/employeeData.sql"
    druid:
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存时间
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1 FROM employee
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开 PSCache，并且指定每个连接上 PSCache 的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的 Filter，去掉后监控界面 SQL 无法统计，wall 用于防火墙
#      filters: stat,wall,log4j
      # 通过 connection-properties 属性打开 mergeSql 功能；慢 SQL 记录
      connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
  # 连接单机Redis
  redis:
    host: 192.168.56.101
    port: 6379
  # 连接Redis集群
  #spring.redis.sentinel.master=mymaster
  #spring.redis.sentinel.nodes=sentinel1:26379,sentinel2:26379,sentinel3:26379
  # 指定cache类型
  cache:
    type: redis
    # 设置cache名称
    cache-names: realTimeCache
# 注册映射文件
mybatis:
  mapper-locations: classpath:/mapper/*.xml
# 注册实体类别名
  type-aliases-package: com.ithawk.demo.**.bean

# 控制日志显示格式
logging:
  pattern:
    console: '%d{yyyy/MM/dd-HH:mm:ss} [%thread] %-5level %logger- %msg%n'
    file: '%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n'
  level:
    root: warn # 项目启动日志级别
    com.ithawk: debug
    com.ithawk.demo.springboot.ex.dao: info
  file:
    name: 'sell.log'

